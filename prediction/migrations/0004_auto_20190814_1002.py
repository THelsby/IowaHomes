# Generated by Django 2.2.4 on 2019-08-14 09:02

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('prediction', '0003_auto_20190814_0905'),
    ]

    operations = [
        migrations.AlterField(
            model_name='houseinformation',
            name='BedroomAbvGr',
            field=models.IntegerField(default=0, help_text='Bedrooms above grade (does NOT include basement bedrooms) (Min 0 | Max 10)', null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='BsmtHalfBath',
            field=models.IntegerField(default=0, help_text='Basement half bathrooms (Min 0 | Max 10)', null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='EnclosedPorch',
            field=models.IntegerField(default=0, help_text='Enclosed porch area in square feet (Min 0 | Max 1000)', null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='FireplaceQu',
            field=models.CharField(choices=[('Ex', 'Excellent - Exceptional Masonry Fireplace'), ('Gd', 'Good - Masonry Fireplace in main level'), ('TA', 'Average - Prefabricated Fireplace in main living area or Masonry Fireplace in basement'), ('Fa', 'Fair - Prefabricated Fireplace in basement'), ('Po', 'Poor - Ben Franklin Stove')], help_text='Fireplace quality', max_length=6, null=True),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='Fireplaces',
            field=models.IntegerField(default=0, help_text='Number of fireplaces (Min 0 | Max 10)', null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='FullBath',
            field=models.IntegerField(default=0, help_text='Full bathrooms above grade (Min 0 | Max 10)', null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='GarageArea',
            field=models.IntegerField(default=0, help_text='Size of garage in square feet (Min 0 | Max 2000)', null=True, validators=[django.core.validators.MaxValueValidator(2000), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='GarageCars',
            field=models.IntegerField(default=0, help_text='Size of garage in car capacity (Min 0 | Max 10)', null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='HalfBath',
            field=models.IntegerField(default=0, help_text='Half baths above grade (Min 0 | Max 10)', null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='HouseStyle',
            field=models.CharField(choices=[('1Story', 'One story'), ('1.5Fin', 'One and one-half story | 2nd level finished'), ('1.5Unf', 'One and one-half story | 2nd level unfinished'), ('2Story', 'Two story'), ('2.5Fin', 'Two and one-half story | 2nd level finished'), ('2.5Unf', 'Two and one-half story | 2nd level unfinished'), ('SFoyer', 'Split Foyer'), ('SLvl', 'Split Level')], help_text='Style of dwelling', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='KitchenAbvGr',
            field=models.IntegerField(default=0, help_text='Kitchens above grade (Min 0 | Max 10)', null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='LotFrontage',
            field=models.IntegerField(default=0, help_text='Linear feet of street connected to property (Min 0 | Max 500)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='MSSubClass',
            field=models.IntegerField(choices=[(20, '1-STORY 1946 & NEWER ALL STYLES'), (30, '1-STORY 1945 & OLDER'), (40, '1-STORY W/FINISHED ATTIC ALL AGES'), (45, '1-1/2 STORY - UNFINISHED ALL AGES'), (50, '1-1/2 STORY FINISHED ALL AGES'), (60, '2-STORY 1946 & NEWER'), (70, '2-STORY 1945 & OLDER'), (75, '2-1/2 STORY ALL AGES'), (80, 'SPLIT OR MULTI-LEVEL'), (85, 'SPLIT FOYER'), (90, 'DUPLEX - ALL STYLES AND AGES'), (120, '1-STORY PUD (Planned Unit Development) - 1946 & NEWER'), (150, '1-1/2 STORY PUD - ALL AGES'), (160, '2-STORY PUD - 1946 & NEWER'), (180, 'PUD - MULTILEVEL - INCL SPLIT LEV/FOYER'), (190, '2 FAMILY CONVERSION - ALL STYLES AND AGES')], help_text='Identifies the type of dwelling involved in the sale.', null=True),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='MiscVal',
            field=models.IntegerField(default=0, help_text='Pool area in square feet (Min 0 | Max 1000)', null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='OpenPorchSF',
            field=models.IntegerField(default=0, help_text='Open porch area in square feet (Min 0 | Max 1000)', null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='OverallCond',
            field=models.IntegerField(choices=[(10, 'Very Excellent'), (9, 'Excellent'), (8, 'Very Good'), (7, 'Good'), (6, 'Above Average'), (5, 'Average'), (4, 'Below Average'), (3, 'Fair'), (2, 'Poor'), (1, 'Very Poor')], help_text='Rates the overall condition of the house', null=True),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='OverallQual',
            field=models.IntegerField(choices=[(10, 'Very Excellent'), (9, 'Excellent'), (8, 'Very Good'), (7, 'Good'), (6, 'Above Average'), (5, 'Average'), (4, 'Below Average'), (3, 'Fair'), (2, 'Poor'), (1, 'Very Poor')], help_text='Rates the overall material and finish of the house', null=True),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='PoolArea',
            field=models.IntegerField(default=0, help_text='Pool area in square feet (Min 0 | Max 1000)', null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='ScreenPorch',
            field=models.IntegerField(default=0, help_text='Screen porch area in square feet (Min 0 | Max 1000)', null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='ThreeSsnPorch',
            field=models.IntegerField(default=0, help_text='Three season porch area in square feet (Min 0 | Max 1000)', null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='TotRmsAbvGrd',
            field=models.IntegerField(default=0, help_text='Total rooms above grade (does not include bathrooms) (Min 0 | Max 20)', null=True, validators=[django.core.validators.MaxValueValidator(20), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='houseinformation',
            name='WoodDeckSF',
            field=models.IntegerField(default=0, help_text='Wood deck area in square feet (Min 0 | Max 1000)', null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(0)]),
        ),
    ]
